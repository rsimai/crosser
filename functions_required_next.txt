suggest_start_field
read matrix
randomly pick x, y beween 0 and maximum
check if free
return matrix, x, y

find_start_field
read matrix, x, y
go left until boundary
return matrix, x, y coodinates

mirror_board
read matrix
numpy.rot90
numpy.flipud
return matrix

count_spaces
read matrix
loop through y and x
add if matrix[x][y] == " "
return spaces

check_surroundings
read matrix, x, y
check x-1, x+1, y-1 and y+1 (if valid) if character exists
If yes, mirror the board and start next recursion from these coordinates
If no, return matrix, x, y


